from collections import namedtuple
from tensorflow.python.util import tf_decorator as tf_decorator, tf_inspect as tf_inspect
from typing import Any

ESTIMATOR_API_NAME: str
KERAS_API_NAME: str
TENSORFLOW_API_NAME: str
SUBPACKAGE_NAMESPACES: Any

_Attributes = namedtuple('ExportedApiAttributes', ['names', 'constants'])
API_ATTRS: Any
API_ATTRS_V1: Any

class SymbolAlreadyExposedError(Exception): ...
class InvalidSymbolNameError(Exception): ...

def get_canonical_name_for_symbol(symbol: Any, api_name: Any = ..., add_prefix_to_v1_names: bool = ...): ...
def get_canonical_name(api_names: Any, deprecated_api_names: Any): ...
def get_v1_names(symbol: Any): ...
def get_v2_names(symbol: Any): ...
def get_v1_constants(module: Any): ...
def get_v2_constants(module: Any): ...

class api_export:
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    def __call__(self, func: Any): ...
    def set_attr(self, func: Any, api_names_attr: Any, names: Any) -> None: ...
    def export_constant(self, module_name: Any, name: Any) -> None: ...

def kwarg_only(f: Any): ...

tf_export: Any
estimator_export: Any
keras_export: Any

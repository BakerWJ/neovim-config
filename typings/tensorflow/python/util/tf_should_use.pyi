from tensorflow.python.eager import context as context
from tensorflow.python.framework import ops as ops
from tensorflow.python.platform import tf_logging as tf_logging
from tensorflow.python.util import tf_decorator as tf_decorator
from typing import Any, Optional

class _TFShouldUseHelper:
    def __init__(self, type_: Any, repr_: Any, stack_frame: Any, error_in_function: Any, warn_in_eager: Any): ...
    def sate(self) -> None: ...
    def __del__(self) -> None: ...

def _new__init__(self, wrapped_value: Any, tf_should_use_helper: Any) -> None: ...
def _new__setattr__(self, key: Any, value: Any): ...
def _new__getattribute__(self, key: Any): ...
def should_use_result(fn: Optional[Any] = ..., warn_in_eager: bool = ..., error_in_function: bool = ...): ...

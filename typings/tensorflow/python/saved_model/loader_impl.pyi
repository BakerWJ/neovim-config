from tensorflow.core.protobuf import graph_debug_info_pb2 as graph_debug_info_pb2, meta_graph_pb2 as meta_graph_pb2, saved_model_pb2 as saved_model_pb2
from tensorflow.python.framework import ops as ops
from tensorflow.python.lib.io import file_io as file_io
from tensorflow.python.ops import variables as variables
from tensorflow.python.platform import tf_logging as tf_logging
from tensorflow.python.saved_model import constants as constants, signature_def_utils as signature_def_utils
from tensorflow.python.util import compat as compat, deprecation as deprecation
from tensorflow.python.util.tf_export import tf_export as tf_export
from typing import Any, Optional

def parse_saved_model_with_debug_info(export_dir: Any): ...
def parse_saved_model(export_dir: Any): ...
def get_asset_tensors(export_dir: Any, meta_graph_def_to_load: Any, import_scope: Optional[Any] = ...): ...
def get_init_op(meta_graph_def: Any, import_scope: Optional[Any] = ...): ...
def get_train_op(meta_graph_def: Any, import_scope: Optional[Any] = ...): ...
def maybe_saved_model_directory(export_dir: Any): ...
def contains_saved_model(export_dir: Any): ...
def load(sess: Any, tags: Any, export_dir: Any, import_scope: Optional[Any] = ..., **saver_kwargs: Any): ...

class SavedModelLoader:
    def __init__(self, export_dir: Any) -> None: ...
    @property
    def export_dir(self): ...
    @property
    def variables_path(self): ...
    @property
    def saved_model(self): ...
    def get_meta_graph_def_from_tags(self, tags: Any): ...
    def load_graph(self, graph: Any, tags: Any, import_scope: Optional[Any] = ..., **saver_kwargs: Any): ...
    def restore_variables(self, sess: Any, saver: Any, import_scope: Optional[Any] = ...) -> None: ...
    def run_init_ops(self, sess: Any, tags: Any, import_scope: Optional[Any] = ...) -> None: ...
    def load(self, sess: Any, tags: Any, import_scope: Optional[Any] = ..., **saver_kwargs: Any): ...

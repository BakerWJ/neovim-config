from tensorflow.python.platform import gfile as gfile
from tensorflow.python.tpu import tensor_tracer_pb2 as tensor_tracer_pb2
from typing import Any

def topological_sort(g: Any): ...

class TensorTracerConfig:
    version: Any = ...
    device_type: Any = ...
    num_replicas: Any = ...
    num_replicas_per_host: Any = ...
    num_hosts: Any = ...
    def __init__(self) -> None: ...

class TensorTraceOrder:
    graph_order: Any = ...
    traced_tensors: Any = ...
    def __init__(self, graph_order: Any, traced_tensors: Any) -> None: ...

def sort_tensors_and_ops(graph: Any): ...

class OpenReportFile:
    def __init__(self, tt_parameters: Any) -> None: ...
    def __enter__(self): ...
    def __exit__(self, unused_type: Any, unused_value: Any, unused_traceback: Any) -> None: ...

class TTReportHandle:
    instrument_records: Any = ...
    def __init__(self) -> None: ...
    def instrument(self, name: Any, explanation: Any) -> None: ...
    def instrument_op(self, op: Any, explanation: Any) -> None: ...
    def instrument_tensor(self, tensor: Any, explanation: Any) -> None: ...
    def create_report_proto(self, tt_config: Any, tt_parameters: Any, tensor_trace_order: Any, tensor_trace_points: Any, collected_signature_types: Any): ...
    def write_report_proto(self, report_proto: Any, tt_parameters: Any) -> None: ...
    def create_report(self, tt_config: Any, tt_parameters: Any, tensor_trace_order: Any, tensor_trace_points: Any) -> None: ...

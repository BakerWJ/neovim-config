from tensorflow.python.tpu.topology import Topology as Topology
from tensorflow.python.util.tf_export import tf_export as tf_export
from typing import Any, Optional

SINGLE_CORE_ASSIGNMENT: Any

class DeviceAssignment:
    def __init__(self, topology: Any, core_assignment: Any) -> None: ...
    @property
    def topology(self): ...
    @property
    def num_cores_per_replica(self): ...
    @property
    def num_replicas(self): ...
    @property
    def core_assignment(self): ...
    def coordinates(self, replica: Any, logical_core: Any): ...
    def lookup_replicas(self, task_id: Any, logical_core: Any): ...
    def tpu_ordinal(self, replica: int = ..., logical_core: int = ...): ...
    def host_device(self, replica: int = ..., logical_core: int = ..., job: Optional[Any] = ...): ...
    def tpu_device(self, replica: int = ..., logical_core: int = ..., job: Optional[Any] = ...): ...
    @staticmethod
    def build(topology: Any, computation_shape: Optional[Any] = ..., computation_stride: Optional[Any] = ..., num_replicas: int = ...): ...

def device_assignment(topology: Any, computation_shape: Optional[Any] = ..., computation_stride: Optional[Any] = ..., num_replicas: int = ...): ...

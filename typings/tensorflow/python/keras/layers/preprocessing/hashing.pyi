from tensorflow.python.framework import dtypes as dtypes, sparse_tensor as sparse_tensor, tensor_spec as tensor_spec
from tensorflow.python.keras.engine.base_layer import Layer as Layer
from tensorflow.python.ops import string_ops as string_ops
from tensorflow.python.ops.ragged import ragged_functional_ops as ragged_functional_ops, ragged_tensor as ragged_tensor
from typing import Any, Optional

class Hashing(Layer):
    num_bins: Any = ...
    salt: Any = ...
    def __init__(self, num_bins: Any, salt: Optional[Any] = ..., name: Optional[Any] = ..., **kwargs: Any) -> None: ...
    def call(self, inputs: Any): ...
    def compute_output_shape(self, input_shape: Any): ...
    def compute_output_signature(self, input_spec: Any): ...
    def get_config(self): ...

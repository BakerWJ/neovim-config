from tensorflow.python.framework import dtypes as dtypes, ops as ops, tensor_shape as tensor_shape
from tensorflow.python.keras import initializers as initializers
from tensorflow.python.keras.engine import base_layer as base_layer, input_spec as input_spec
from tensorflow.python.ops import gen_math_ops as gen_math_ops, init_ops as init_ops, nn as nn
from typing import Any, Optional

class RandomFourierFeatures(base_layer.Layer):
    output_dim: Any = ...
    kernel_initializer: Any = ...
    scale: Any = ...
    def __init__(self, output_dim: Any, kernel_initializer: str = ..., scale: Optional[Any] = ..., trainable: bool = ..., name: Optional[Any] = ..., **kwargs: Any) -> None: ...
    input_spec: Any = ...
    bias: Any = ...
    kernel: Any = ...
    def build(self, input_shape: Any) -> None: ...
    def call(self, inputs: Any): ...
    def compute_output_shape(self, input_shape: Any): ...
    def get_config(self): ...

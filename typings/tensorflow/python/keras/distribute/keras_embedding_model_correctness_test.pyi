from tensorflow.python import keras as keras
from tensorflow.python.distribute import combinations as combinations
from tensorflow.python.keras.distribute import keras_correctness_test_base as keras_correctness_test_base
from tensorflow.python.platform import test as test
from typing import Any, Optional

class DistributionStrategyEmbeddingModelCorrectnessTest(keras_correctness_test_base.TestDistributionStrategyEmbeddingModelCorrectnessBase):
    def get_model(self, max_words: int = ..., initial_weights: Optional[Any] = ..., distribution: Optional[Any] = ..., input_shapes: Optional[Any] = ...): ...
    use_distributed_dense: bool = ...
    def test_embedding_model_correctness(self, distribution: Any, use_numpy: Any, use_validation_data: Any) -> None: ...
    def test_embedding_time_distributed_model_correctness(self, distribution: Any, use_numpy: Any, use_validation_data: Any) -> None: ...

class DistributionStrategySiameseEmbeddingModelCorrectnessTest(keras_correctness_test_base.TestDistributionStrategyEmbeddingModelCorrectnessBase):
    def get_model(self, max_words: int = ..., initial_weights: Optional[Any] = ..., distribution: Optional[Any] = ..., input_shapes: Optional[Any] = ...): ...
    def get_data(self, count: Any = ..., min_words: int = ..., max_words: int = ..., max_word_id: int = ..., num_classes: int = ...): ...
    def test_siamese_embedding_model_correctness(self, distribution: Any, use_numpy: Any, use_validation_data: Any) -> None: ...

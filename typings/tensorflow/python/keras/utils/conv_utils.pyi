from tensorflow.python.keras import backend as backend
from typing import Any, Optional

def convert_data_format(data_format: Any, ndim: Any): ...
def normalize_tuple(value: Any, n: Any, name: Any): ...
def conv_output_length(input_length: Any, filter_size: Any, padding: Any, stride: Any, dilation: int = ...): ...
def conv_input_length(output_length: Any, filter_size: Any, padding: Any, stride: Any): ...
def deconv_output_length(input_length: Any, filter_size: Any, padding: Any, output_padding: Optional[Any] = ..., stride: int = ..., dilation: int = ...): ...
def normalize_data_format(value: Any): ...
def normalize_padding(value: Any): ...
def convert_kernel(kernel: Any): ...
def conv_kernel_mask(input_shape: Any, kernel_shape: Any, strides: Any, padding: Any): ...
def conv_kernel_idxs(input_shape: Any, kernel_shape: Any, strides: Any, padding: Any, filters_in: Any, filters_out: Any, data_format: Any): ...
def conv_connected_inputs(input_shape: Any, kernel_shape: Any, output_position: Any, strides: Any, padding: Any): ...
def conv_output_shape(input_shape: Any, kernel_shape: Any, strides: Any, padding: Any): ...

from tensorflow.python.framework import dtypes as dtypes, tensor_shape as tensor_shape, tensor_spec as tensor_spec
from tensorflow.python.keras import backend as backend
from tensorflow.python.util import nest as nest
from tensorflow.python.util.tf_export import keras_export as keras_export, tf_export as tf_export
from typing import Any, Optional

class InputSpec:
    dtype: Any = ...
    ndim: Any = ...
    shape: Any = ...
    max_ndim: Any = ...
    min_ndim: Any = ...
    axes: Any = ...
    def __init__(self, dtype: Optional[Any] = ..., shape: Optional[Any] = ..., ndim: Optional[Any] = ..., max_ndim: Optional[Any] = ..., min_ndim: Optional[Any] = ..., axes: Optional[Any] = ...) -> None: ...
    def get_config(self): ...
    @classmethod
    def from_config(cls, config: Any): ...

def to_tensor_shape(spec: Any): ...
def assert_input_compatibility(input_spec: Any, inputs: Any, layer_name: Any) -> None: ...
def to_tensor_spec(input_spec: Any, default_dtype: Optional[Any] = ...): ...

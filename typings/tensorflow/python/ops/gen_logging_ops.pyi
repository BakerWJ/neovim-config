from tensorflow.python.util.deprecation import deprecated_endpoints as deprecated_endpoints
from tensorflow.python.util.tf_export import tf_export as tf_export
from typing import Any, Optional

Assert: Any

def audio_summary(tag: Any, tensor: Any, sample_rate: Any, max_outputs: int = ..., name: Optional[Any] = ...): ...

AudioSummary: Any

def audio_summary_eager_fallback(tag: Any, tensor: Any, sample_rate: Any, max_outputs: Any, name: Any, ctx: Any): ...
def audio_summary_v2(tag: Any, tensor: Any, sample_rate: Any, max_outputs: int = ..., name: Optional[Any] = ...): ...

AudioSummaryV2: Any

def audio_summary_v2_eager_fallback(tag: Any, tensor: Any, sample_rate: Any, max_outputs: Any, name: Any, ctx: Any): ...
def histogram_summary(tag: Any, values: Any, name: Optional[Any] = ...): ...

HistogramSummary: Any

def histogram_summary_eager_fallback(tag: Any, values: Any, name: Any, ctx: Any): ...
def image_summary(tag: Any, tensor: Any, max_images: int = ..., bad_color: Any = ..., name: Optional[Any] = ...): ...

ImageSummary: Any

def image_summary_eager_fallback(tag: Any, tensor: Any, max_images: Any, bad_color: Any, name: Any, ctx: Any): ...
def merge_summary(inputs: Any, name: Optional[Any] = ...): ...

MergeSummary: Any

def merge_summary_eager_fallback(inputs: Any, name: Any, ctx: Any): ...

Print: Any

def print_v2(input: Any, output_stream: str = ..., end: str = ..., name: Optional[Any] = ...): ...

PrintV2: Any

def print_v2_eager_fallback(input: Any, output_stream: Any, end: Any, name: Any, ctx: Any): ...
def scalar_summary(tags: Any, values: Any, name: Optional[Any] = ...): ...

ScalarSummary: Any

def scalar_summary_eager_fallback(tags: Any, values: Any, name: Any, ctx: Any): ...
def tensor_summary(tensor: Any, description: str = ..., labels: Any = ..., display_name: str = ..., name: Optional[Any] = ...): ...

TensorSummary: Any

def tensor_summary_eager_fallback(tensor: Any, description: Any, labels: Any, display_name: Any, name: Any, ctx: Any): ...
def tensor_summary_v2(tag: Any, tensor: Any, serialized_summary_metadata: Any, name: Optional[Any] = ...): ...

TensorSummaryV2: Any

def tensor_summary_v2_eager_fallback(tag: Any, tensor: Any, serialized_summary_metadata: Any, name: Any, ctx: Any): ...
def timestamp(name: Optional[Any] = ...): ...

Timestamp: Any

def timestamp_eager_fallback(name: Any, ctx: Any): ...

from tensorflow.python.ops.linalg import linear_operator
from typing import Any, Optional

class BaseLinearOperatorIdentity(linear_operator.LinearOperator): ...

class LinearOperatorIdentity(BaseLinearOperatorIdentity):
    def __init__(self, num_rows: Any, batch_shape: Optional[Any] = ..., dtype: Optional[Any] = ..., is_non_singular: bool = ..., is_self_adjoint: bool = ..., is_positive_definite: bool = ..., is_square: bool = ..., assert_proper_shapes: bool = ..., name: str = ...) -> None: ...
    def add_to_tensor(self, mat: Any, name: str = ...): ...

class LinearOperatorScaledIdentity(BaseLinearOperatorIdentity):
    def __init__(self, num_rows: Any, multiplier: Any, is_non_singular: Optional[Any] = ..., is_self_adjoint: Optional[Any] = ..., is_positive_definite: Optional[Any] = ..., is_square: bool = ..., assert_proper_shapes: bool = ..., name: str = ...) -> None: ...
    def add_to_tensor(self, mat: Any, name: str = ...): ...
    @property
    def multiplier(self): ...

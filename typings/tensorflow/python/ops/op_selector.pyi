from tensorflow.python.framework import ops as ops
from tensorflow.python.util import object_identity as object_identity
from typing import Any, Optional

def is_differentiable(op: Any): ...
def is_iterable(obj: Any): ...
def concatenate_unique(la: Any, lb: Any): ...
def get_tensors(graph: Any): ...
def get_unique_graph(tops: Any, check_types: Optional[Any] = ..., none_if_empty: bool = ...): ...
def check_graphs(*args: Any) -> None: ...
def make_list_of_t(ts: Any, check_graph: bool = ..., allow_graph: bool = ..., ignore_ops: bool = ...): ...
def get_generating_ops(ts: Any): ...
def get_consuming_ops(ts: Any): ...
def make_list_of_op(tops: Any, check_graph: bool = ..., allow_graph: bool = ..., ignore_ts: bool = ...): ...
def get_backward_walk_ops(seed_ops: Any, inclusive: bool = ..., within_ops: Optional[Any] = ..., within_ops_fn: Optional[Any] = ..., stop_at_ts: Any = ..., control_inputs: bool = ..., only_differentiable: bool = ...): ...

class UnliftableError(Exception):
    ag_pass_through: bool = ...

def graph_inputs(op: Any): ...
def map_subgraph(init_tensor: Any, sources: Any, disallowed_placeholders: Any, visited_ops: Any, op_outputs: Any, add_sources: Any): ...

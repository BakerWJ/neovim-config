from tensorflow.python.util.deprecation import deprecated_endpoints as deprecated_endpoints
from tensorflow.python.util.tf_export import tf_export as tf_export
from typing import Any, Optional

def non_deterministic_ints(shape: Any, dtype: Any = ..., name: Optional[Any] = ...): ...

NonDeterministicInts: Any

def non_deterministic_ints_eager_fallback(shape: Any, dtype: Any, name: Any, ctx: Any): ...
def rng_skip(resource: Any, algorithm: Any, delta: Any, name: Optional[Any] = ...): ...

RngSkip: Any

def rng_skip_eager_fallback(resource: Any, algorithm: Any, delta: Any, name: Any, ctx: Any): ...
def stateful_random_binomial(resource: Any, algorithm: Any, shape: Any, counts: Any, probs: Any, dtype: Any = ..., name: Optional[Any] = ...): ...

StatefulRandomBinomial: Any

def stateful_random_binomial_eager_fallback(resource: Any, algorithm: Any, shape: Any, counts: Any, probs: Any, dtype: Any, name: Any, ctx: Any): ...
def stateful_standard_normal(resource: Any, shape: Any, dtype: Any = ..., name: Optional[Any] = ...): ...

StatefulStandardNormal: Any

def stateful_standard_normal_eager_fallback(resource: Any, shape: Any, dtype: Any, name: Any, ctx: Any): ...
def stateful_standard_normal_v2(resource: Any, algorithm: Any, shape: Any, dtype: Any = ..., name: Optional[Any] = ...): ...

StatefulStandardNormalV2: Any

def stateful_standard_normal_v2_eager_fallback(resource: Any, algorithm: Any, shape: Any, dtype: Any, name: Any, ctx: Any): ...
def stateful_truncated_normal(resource: Any, algorithm: Any, shape: Any, dtype: Any = ..., name: Optional[Any] = ...): ...

StatefulTruncatedNormal: Any

def stateful_truncated_normal_eager_fallback(resource: Any, algorithm: Any, shape: Any, dtype: Any, name: Any, ctx: Any): ...
def stateful_uniform(resource: Any, algorithm: Any, shape: Any, dtype: Any = ..., name: Optional[Any] = ...): ...

StatefulUniform: Any

def stateful_uniform_eager_fallback(resource: Any, algorithm: Any, shape: Any, dtype: Any, name: Any, ctx: Any): ...
def stateful_uniform_full_int(resource: Any, algorithm: Any, shape: Any, dtype: Any = ..., name: Optional[Any] = ...): ...

StatefulUniformFullInt: Any

def stateful_uniform_full_int_eager_fallback(resource: Any, algorithm: Any, shape: Any, dtype: Any, name: Any, ctx: Any): ...
def stateful_uniform_int(resource: Any, algorithm: Any, shape: Any, minval: Any, maxval: Any, name: Optional[Any] = ...): ...

StatefulUniformInt: Any

def stateful_uniform_int_eager_fallback(resource: Any, algorithm: Any, shape: Any, minval: Any, maxval: Any, name: Any, ctx: Any): ...

from tensorflow.core.framework import resource_handle_pb2 as resource_handle_pb2
from tensorflow.python.client import pywrap_tf_session as pywrap_tf_session
from tensorflow.python.framework import dtypes as dtypes, ops as ops
from tensorflow.python.ops import array_ops as array_ops, gen_data_flow_ops as gen_data_flow_ops
from tensorflow.python.util import compat as compat
from tensorflow.python.util.tf_export import tf_export as tf_export
from typing import Any, Optional

def encode_resource_handle(resource_handle: Any): ...

class TensorHandle:
    def __init__(self, handle: Any, dtype: Any, session: Any) -> None: ...
    def __del__(self) -> None: ...
    def to_numpy_array(self): ...
    @property
    def handle(self): ...
    def eval(self): ...
    def delete(self) -> None: ...
    def get_raw_handle(self): ...

def get_session_handle(data: Any, name: Optional[Any] = ...): ...
def get_session_tensor(handle: Any, dtype: Any, name: Optional[Any] = ...): ...
def delete_session_tensor(handle: Any, name: Optional[Any] = ...): ...

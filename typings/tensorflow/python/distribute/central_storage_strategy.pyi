from tensorflow.python.distribute import device_util as device_util, distribute_lib as distribute_lib, parameter_server_strategy as parameter_server_strategy
from tensorflow.python.util.tf_export import tf_export as tf_export
from typing import Any, Optional

class CentralStorageStrategy(distribute_lib.Strategy):
    def __init__(self, compute_devices: Optional[Any] = ..., parameter_device: Optional[Any] = ...) -> None: ...
    def experimental_distribute_dataset(self, dataset: Any): ...
    def experimental_distribute_datasets_from_function(self, dataset_fn: Any): ...
    def experimental_local_results(self, value: Any): ...
    def run(self, fn: Any, args: Any = ..., kwargs: Optional[Any] = ..., options: Optional[Any] = ...): ...
    def reduce(self, reduce_op: Any, value: Any, axis: Any): ...

class CentralStorageStrategyV1(distribute_lib.StrategyV1):
    __doc__: Any = ...
    def __init__(self, compute_devices: Optional[Any] = ..., parameter_device: Optional[Any] = ...) -> None: ...

from tensorflow.python.distribute.cluster_resolver.cluster_resolver import ClusterResolver as ClusterResolver
from tensorflow.python.training.server_lib import ClusterSpec as ClusterSpec
from tensorflow.python.util.tf_export import tf_export as tf_export
from typing import Any, Optional

def format_master_url(master: Any, rpc_layer: Optional[Any] = ...): ...

class TFConfigClusterResolver(ClusterResolver):
    def __init__(self, task_type: Optional[Any] = ..., task_id: Optional[Any] = ..., rpc_layer: Optional[Any] = ..., environment: Optional[Any] = ...) -> None: ...
    @property
    def task_type(self): ...
    @property
    def task_id(self): ...
    @task_type.setter
    def task_type(self, task_type: Any) -> None: ...
    @task_id.setter
    def task_id(self, task_id: Any) -> None: ...
    @property
    def environment(self): ...
    @property
    def rpc_layer(self): ...
    @rpc_layer.setter
    def rpc_layer(self, rpc_layer: Any) -> None: ...
    def num_accelerators(self, task_type: Optional[Any] = ..., task_id: Optional[Any] = ..., config_proto: Optional[Any] = ...): ...
    def cluster_spec(self): ...
    def master(self, task_type: Optional[Any] = ..., task_id: Optional[Any] = ..., rpc_layer: Optional[Any] = ...): ...

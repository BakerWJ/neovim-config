from tensorflow.python.distribute.cluster_resolver.cluster_resolver import ClusterResolver as ClusterResolver, format_master_url as format_master_url
from tensorflow.python.training import server_lib as server_lib
from tensorflow.python.util.tf_export import tf_export as tf_export
from typing import Any, Optional

class KubernetesClusterResolver(ClusterResolver):
    task_type: Any = ...
    task_id: Any = ...
    rpc_layer: Any = ...
    def __init__(self, job_to_label_mapping: Optional[Any] = ..., tf_server_port: int = ..., rpc_layer: str = ..., override_client: Optional[Any] = ...) -> None: ...
    def master(self, task_type: Optional[Any] = ..., task_id: Optional[Any] = ..., rpc_layer: Optional[Any] = ...): ...
    def cluster_spec(self): ...

from tensorflow.python.eager import context as context
from tensorflow.python.framework import test_combinations as test_combinations
from tensorflow.python.platform import flags as flags
from typing import Any, Optional

FLAGS: Any

class DistributionParameter(test_combinations.ParameterModifier):
    def modified_arguments(self, kwargs: Any, requested_parameters: Any): ...

class NamedGPUCombination(test_combinations.TestCombination):
    GPU_TEST: Any = ...
    def should_execute_combination(self, kwargs: Any): ...
    def parameter_modifiers(self): ...

class GPUCombination(NamedGPUCombination):
    def parameter_modifiers(self): ...

class NamedTPUCombination(test_combinations.TestCombination):
    TPU_TEST: Any = ...
    def should_execute_combination(self, kwargs: Any): ...
    def parameter_modifiers(self): ...

class TPUCombination(NamedTPUCombination):
    def parameter_modifiers(self): ...

class NamedDistribution:
    def __init__(self, name: Any, distribution_fn: Any, required_gpus: Optional[Any] = ..., required_tpu: bool = ..., use_cloud_tpu: bool = ...) -> None: ...
    @property
    def strategy(self): ...
    @property
    def required_gpus(self): ...
    @property
    def required_tpu(self): ...
    @property
    def use_cloud_tpu(self): ...

def concat(*combined: Any): ...

generate: Any
combine: Any
times: Any
NamedObject: Any

import threading
from tensorflow.python.platform import gfile as gfile
from tensorflow.python.util import compat as compat
from typing import Any, Optional

class EventFileWriter:
    def __init__(self, logdir: Any, max_queue: int = ..., flush_secs: int = ..., filename_suffix: Optional[Any] = ...) -> None: ...
    def get_logdir(self): ...
    def reopen(self) -> None: ...
    def add_event(self, event: Any) -> None: ...
    def flush(self) -> None: ...
    def close(self) -> None: ...

class _EventLoggerThread(threading.Thread):
    daemon: bool = ...
    failure_exc_info: Any = ...
    def __init__(self, queue: Any, ev_writer: Any, flush_secs: Any, flush_complete: Any, flush_sentinel: Any, close_sentinel: Any) -> None: ...
    def run(self) -> None: ...

class CloseableQueue:
    def __init__(self, maxsize: int = ...) -> None: ...
    def get(self): ...
    def put(self, item: Any) -> None: ...
    def close(self) -> None: ...

class QueueClosedError(Exception): ...

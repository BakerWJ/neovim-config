from . import compat as compat
from tensorflow._api.v2.compat.v1 import app as app, audio as audio, autograph as autograph, bitwise as bitwise, config as config, data as data, debugging as debugging, distribute as distribute, distributions as distributions, dtypes as dtypes, errors as errors, experimental as experimental, feature_column as feature_column, gfile as gfile, graph_util as graph_util, image as image, initializers as initializers, io as io, layers as layers, linalg as linalg, lite as lite, logging as logging, lookup as lookup, losses as losses, manip as manip, math as math, metrics as metrics, mixed_precision as mixed_precision, mlir as mlir, nest as nest, nn as nn, profiler as profiler, python_io as python_io, quantization as quantization, queue as queue, ragged as ragged, random as random, raw_ops as raw_ops, resource_loader as resource_loader, saved_model as saved_model, sets as sets, signal as signal, sparse as sparse, spectral as spectral, strings as strings, summary as summary, sysconfig as sysconfig, test as test, tpu as tpu, train as train, user_ops as user_ops, version as version, xla as xla
from tensorflow.python import AttrValue as AttrValue, ConfigProto as ConfigProto, Event as Event, GPUOptions as GPUOptions, GraphDef as GraphDef, GraphOptions as GraphOptions, HistogramProto as HistogramProto, LogMessage as LogMessage, MetaGraphDef as MetaGraphDef, NameAttrList as NameAttrList, NodeDef as NodeDef, OptimizerOptions as OptimizerOptions, RunMetadata as RunMetadata, RunOptions as RunOptions, SessionLog as SessionLog, Summary as Summary, SummaryMetadata as SummaryMetadata, TensorInfo as TensorInfo
from tensorflow.python.client.session import InteractiveSession as InteractiveSession, Session as Session
from tensorflow.python.compat.v2_compat import disable_v2_behavior as disable_v2_behavior, enable_v2_behavior as enable_v2_behavior
from tensorflow.python.data.ops.optional_ops import OptionalSpec as OptionalSpec
from tensorflow.python.eager.backprop import GradientTape as GradientTape
from tensorflow.python.eager.def_function import function as function
from tensorflow.python.eager.wrap_function import wrap_function as wrap_function
from tensorflow.python.framework.dtypes import DType as DType, QUANTIZED_DTYPES as QUANTIZED_DTYPES, as_dtype as as_dtype, bfloat16 as bfloat16, bool as bool, complex128 as complex128, complex64 as complex64, double as double, float16 as float16, float32 as float32, float64 as float64, half as half, int16 as int16, int32 as int32, int64 as int64, int8 as int8, qint16 as qint16, qint32 as qint32, qint8 as qint8, quint16 as quint16, quint8 as quint8, resource as resource, string as string, uint16 as uint16, uint32 as uint32, uint64 as uint64, uint8 as uint8, variant as variant
from tensorflow.python.framework.errors_impl import OpError as OpError
from tensorflow.python.framework.importer import import_graph_def as import_graph_def
from tensorflow.python.framework.indexed_slices import IndexedSlices as IndexedSlices, IndexedSlicesSpec as IndexedSlicesSpec, convert_to_tensor_or_indexed_slices as convert_to_tensor_or_indexed_slices
from tensorflow.python.framework.load_library import load_file_system_library as load_file_system_library, load_library as load_library, load_op_library as load_op_library
from tensorflow.python.framework.ops import Graph as Graph, GraphKeys as GraphKeys, Operation as Operation, RegisterGradient as RegisterGradient, Tensor as Tensor, add_to_collection as add_to_collection, add_to_collections as add_to_collections, container as container, control_dependencies as control_dependencies, device as device, disable_eager_execution as disable_eager_execution, disable_tensor_equality as disable_tensor_equality, enable_eager_execution as enable_eager_execution, enable_tensor_equality as enable_tensor_equality, executing_eagerly_outside_functions as executing_eagerly_outside_functions, get_collection as get_collection, get_collection_ref as get_collection_ref, get_default_graph as get_default_graph, get_default_session as get_default_session, init_scope as init_scope, no_gradient as no_gradient, op_scope as op_scope, reset_default_graph as reset_default_graph
from tensorflow.python.framework.random_seed import get_seed as get_seed, set_random_seed as set_random_seed
from tensorflow.python.framework.sparse_tensor import SparseTensor as SparseTensor, SparseTensorSpec as SparseTensorSpec, SparseTensorValue as SparseTensorValue, convert_to_tensor_or_sparse_tensor as convert_to_tensor_or_sparse_tensor
from tensorflow.python.framework.tensor_conversion_registry import register_tensor_conversion_function as register_tensor_conversion_function
from tensorflow.python.framework.tensor_shape import Dimension as Dimension, TensorShape as TensorShape, dimension_at_index as dimension_at_index, dimension_value as dimension_value, disable_v2_tensorshape as disable_v2_tensorshape, enable_v2_tensorshape as enable_v2_tensorshape
from tensorflow.python.framework.tensor_spec import TensorSpec as TensorSpec
from tensorflow.python.framework.tensor_util import is_tensor as is_tensor, make_tensor_proto as make_tensor_proto
from tensorflow.python.framework.type_spec import TypeSpec as TypeSpec
from tensorflow.python.framework.versions import COMPILER_VERSION as COMPILER_VERSION, CXX11_ABI_FLAG as CXX11_ABI_FLAG, GIT_VERSION as GIT_VERSION, GRAPH_DEF_VERSION as GRAPH_DEF_VERSION, GRAPH_DEF_VERSION_MIN_CONSUMER as GRAPH_DEF_VERSION_MIN_CONSUMER, GRAPH_DEF_VERSION_MIN_PRODUCER as GRAPH_DEF_VERSION_MIN_PRODUCER, MONOLITHIC_BUILD as MONOLITHIC_BUILD, VERSION as VERSION
from tensorflow.python.keras.api._v1 import keras as keras
from tensorflow.python.module.module import Module as Module
from tensorflow.python.ops.array_ops import batch_gather as batch_gather, batch_to_space as batch_to_space, boolean_mask as boolean_mask, broadcast_dynamic_shape as broadcast_dynamic_shape, broadcast_static_shape as broadcast_static_shape, concat as concat, depth_to_space as depth_to_space, dequantize as dequantize, edit_distance as edit_distance, expand_dims as expand_dims, extract_image_patches as extract_image_patches, fill as fill, fingerprint as fingerprint, gather as gather, gather_nd as gather_nd, identity as identity, matrix_diag as matrix_diag, matrix_diag_part as matrix_diag_part, matrix_set_diag as matrix_set_diag, matrix_transpose as matrix_transpose, meshgrid as meshgrid, newaxis as newaxis, one_hot as one_hot, ones as ones, ones_like as ones_like, pad as pad, parallel_stack as parallel_stack, placeholder as placeholder, placeholder_with_default as placeholder_with_default, quantize as quantize, quantize_v2 as quantize_v2, rank as rank, repeat as repeat, required_space_to_batch_paddings as required_space_to_batch_paddings, reshape as reshape, reverse_sequence as reverse_sequence, searchsorted as searchsorted, sequence_mask as sequence_mask, setdiff1d as setdiff1d, shape as shape, shape_n as shape_n, size as size, slice as slice, space_to_batch as space_to_batch, space_to_depth as space_to_depth, sparse_mask as sparse_mask, sparse_placeholder as sparse_placeholder, split as split, squeeze as squeeze, stack as stack, strided_slice as strided_slice, transpose as transpose, unique as unique, unique_with_counts as unique_with_counts, unstack as unstack, where as where, where_v2 as where_v2, zeros as zeros, zeros_like as zeros_like
from tensorflow.python.ops.check_ops import assert_equal as assert_equal, assert_greater as assert_greater, assert_greater_equal as assert_greater_equal, assert_integer as assert_integer, assert_less as assert_less, assert_less_equal as assert_less_equal, assert_near as assert_near, assert_negative as assert_negative, assert_non_negative as assert_non_negative, assert_non_positive as assert_non_positive, assert_none_equal as assert_none_equal, assert_positive as assert_positive, assert_proper_iterable as assert_proper_iterable, assert_rank as assert_rank, assert_rank_at_least as assert_rank_at_least, assert_rank_in as assert_rank_in, assert_same_float_dtype as assert_same_float_dtype, assert_scalar as assert_scalar, assert_type as assert_type, ensure_shape as ensure_shape, is_non_decreasing as is_non_decreasing, is_numeric_tensor as is_numeric_tensor, is_strictly_increasing as is_strictly_increasing
from tensorflow.python.ops.clip_ops import clip_by_average_norm as clip_by_average_norm, clip_by_global_norm as clip_by_global_norm, clip_by_norm as clip_by_norm, clip_by_value as clip_by_value, global_norm as global_norm
from tensorflow.python.ops.control_flow_ops import Assert as Assert, case as case, cond as cond, group as group, switch_case as switch_case, tuple as tuple, while_loop as while_loop
from tensorflow.python.ops.control_flow_v2_toggles import control_flow_v2_enabled as control_flow_v2_enabled, disable_control_flow_v2 as disable_control_flow_v2, enable_control_flow_v2 as enable_control_flow_v2
from tensorflow.python.ops.critical_section_ops import CriticalSection as CriticalSection
from tensorflow.python.ops.custom_gradient import custom_gradient as custom_gradient, grad_pass_through as grad_pass_through, recompute_grad as recompute_grad
from tensorflow.python.ops.data_flow_ops import ConditionalAccumulator as ConditionalAccumulator, ConditionalAccumulatorBase as ConditionalAccumulatorBase, FIFOQueue as FIFOQueue, PaddingFIFOQueue as PaddingFIFOQueue, PriorityQueue as PriorityQueue, QueueBase as QueueBase, RandomShuffleQueue as RandomShuffleQueue, SparseConditionalAccumulator as SparseConditionalAccumulator
from tensorflow.python.ops.functional_ops import foldl as foldl, foldr as foldr, scan as scan
from tensorflow.python.ops.gen_array_ops import batch_to_space_nd as batch_to_space_nd, bitcast as bitcast, broadcast_to as broadcast_to, check_numerics as check_numerics, diag as diag, diag_part as diag_part, extract_volume_patches as extract_volume_patches, fake_quant_with_min_max_args as fake_quant_with_min_max_args, fake_quant_with_min_max_args_gradient as fake_quant_with_min_max_args_gradient, fake_quant_with_min_max_vars as fake_quant_with_min_max_vars, fake_quant_with_min_max_vars_gradient as fake_quant_with_min_max_vars_gradient, fake_quant_with_min_max_vars_per_channel as fake_quant_with_min_max_vars_per_channel, fake_quant_with_min_max_vars_per_channel_gradient as fake_quant_with_min_max_vars_per_channel_gradient, guarantee_const as guarantee_const, identity_n as identity_n, invert_permutation as invert_permutation, matrix_band_part as matrix_band_part, quantized_concat as quantized_concat, reverse_v2 as reverse_v2, scatter_nd as scatter_nd, space_to_batch_nd as space_to_batch_nd, stop_gradient as stop_gradient, tensor_scatter_add as tensor_scatter_add, tensor_scatter_sub as tensor_scatter_sub, tensor_scatter_update as tensor_scatter_update, tile as tile, unravel_index as unravel_index
from tensorflow.python.ops.gen_control_flow_ops import no_op as no_op
from tensorflow.python.ops.gen_data_flow_ops import dynamic_partition as dynamic_partition, dynamic_stitch as dynamic_stitch
from tensorflow.python.ops.gen_io_ops import matching_files as matching_files, read_file as read_file, write_file as write_file
from tensorflow.python.ops.gen_linalg_ops import cholesky as cholesky, matrix_determinant as matrix_determinant, matrix_inverse as matrix_inverse, matrix_solve as matrix_solve, matrix_square_root as matrix_square_root, qr as qr
from tensorflow.python.ops.gen_logging_ops import timestamp as timestamp
from tensorflow.python.ops.gen_math_ops import acos as acos, acosh as acosh, add as add, arg_max as arg_max, arg_min as arg_min, asin as asin, asinh as asinh, atan as atan, atan2 as atan2, atanh as atanh, betainc as betainc, cos as cos, cosh as cosh, cross as cross, digamma as digamma, erf as erf, erfc as erfc, expm1 as expm1, floor as floor, floor_div as floor_div, greater as greater, greater_equal as greater_equal, igamma as igamma, igammac as igammac, is_finite as is_finite, is_inf as is_inf, is_nan as is_nan, less as less, less_equal as less_equal, lgamma as lgamma, lin_space as lin_space, log as log, log1p as log1p, logical_not as logical_not, logical_or as logical_or, maximum as maximum, minimum as minimum, polygamma as polygamma, reciprocal as reciprocal, rint as rint, segment_max as segment_max, segment_mean as segment_mean, segment_min as segment_min, segment_prod as segment_prod, segment_sum as segment_sum, sin as sin, sinh as sinh, square as square, squared_difference as squared_difference, tan as tan, tanh as tanh, unsorted_segment_max as unsorted_segment_max, unsorted_segment_min as unsorted_segment_min, unsorted_segment_prod as unsorted_segment_prod, unsorted_segment_sum as unsorted_segment_sum, zeta as zeta
from tensorflow.python.ops.gen_parsing_ops import decode_compressed as decode_compressed, decode_json_example as decode_json_example, parse_tensor as parse_tensor, serialize_tensor as serialize_tensor
from tensorflow.python.ops.gen_spectral_ops import fft as fft, fft2d as fft2d, fft3d as fft3d, ifft as ifft, ifft2d as ifft2d, ifft3d as ifft3d
from tensorflow.python.ops.gen_string_ops import as_string as as_string, decode_base64 as decode_base64, encode_base64 as encode_base64, string_strip as string_strip, string_to_hash_bucket_fast as string_to_hash_bucket_fast, string_to_hash_bucket_strong as string_to_hash_bucket_strong
from tensorflow.python.ops.gradients_impl import gradients as gradients, hessians as hessians
from tensorflow.python.ops.gradients_util import AggregationMethod as AggregationMethod
from tensorflow.python.ops.histogram_ops import histogram_fixed_width as histogram_fixed_width, histogram_fixed_width_bins as histogram_fixed_width_bins
from tensorflow.python.ops.io_ops import FixedLengthRecordReader as FixedLengthRecordReader, IdentityReader as IdentityReader, LMDBReader as LMDBReader, ReaderBase as ReaderBase, TFRecordReader as TFRecordReader, TextLineReader as TextLineReader, WholeFileReader as WholeFileReader
from tensorflow.python.ops.linalg_ops import cholesky_solve as cholesky_solve, eye as eye, matrix_solve_ls as matrix_solve_ls, matrix_triangular_solve as matrix_triangular_solve, norm as norm, self_adjoint_eig as self_adjoint_eig, self_adjoint_eigvals as self_adjoint_eigvals, svd as svd
from tensorflow.python.ops.logging_ops import Print as Print
from tensorflow.python.ops.lookup_ops import initialize_all_tables as initialize_all_tables, tables_initializer as tables_initializer
from tensorflow.python.ops.manip_ops import roll as roll
from tensorflow.python.ops.map_fn import map_fn as map_fn
from tensorflow.python.ops.math_ops import abs as abs, accumulate_n as accumulate_n, add_n as add_n, angle as angle, argmax as argmax, argmin as argmin, cast as cast, ceil as ceil, complex as complex, conj as conj, count_nonzero as count_nonzero, cumprod as cumprod, cumsum as cumsum, div as div, div_no_nan as div_no_nan, divide as divide, equal as equal, exp as exp, floordiv as floordiv, imag as imag, log_sigmoid as log_sigmoid, logical_and as logical_and, logical_xor as logical_xor, matmul as matmul, multiply as multiply, not_equal as not_equal, pow as pow, range as range, real as real, round as round, rsqrt as rsqrt, saturate_cast as saturate_cast, scalar_mul as scalar_mul, sigmoid as sigmoid, sign as sign, sparse_segment_mean as sparse_segment_mean, sparse_segment_sqrt_n as sparse_segment_sqrt_n, sparse_segment_sum as sparse_segment_sum, sqrt as sqrt, subtract as subtract, tensordot as tensordot, to_bfloat16 as to_bfloat16, to_complex128 as to_complex128, to_complex64 as to_complex64, to_double as to_double, to_float as to_float, to_int32 as to_int32, to_int64 as to_int64, trace as trace, truediv as truediv, unsorted_segment_mean as unsorted_segment_mean, unsorted_segment_sqrt_n as unsorted_segment_sqrt_n
from tensorflow.python.ops.numerics import add_check_numerics_ops as add_check_numerics_ops, verify_tensor_all_finite as verify_tensor_all_finite
from tensorflow.python.ops.parallel_for.control_flow_ops import vectorized_map as vectorized_map
from tensorflow.python.ops.parsing_config import FixedLenFeature as FixedLenFeature, FixedLenSequenceFeature as FixedLenSequenceFeature, SparseFeature as SparseFeature, VarLenFeature as VarLenFeature
from tensorflow.python.ops.parsing_ops import decode_csv as decode_csv, parse_example as parse_example, parse_single_example as parse_single_example, parse_single_sequence_example as parse_single_sequence_example
from tensorflow.python.ops.partitioned_variables import create_partitioned_variables as create_partitioned_variables, fixed_size_partitioner as fixed_size_partitioner, min_max_variable_partitioner as min_max_variable_partitioner, variable_axis_size_partitioner as variable_axis_size_partitioner
from tensorflow.python.ops.ragged.ragged_string_ops import string_split as string_split
from tensorflow.python.ops.ragged.ragged_tensor import RaggedTensor as RaggedTensor, RaggedTensorSpec as RaggedTensorSpec
from tensorflow.python.ops.random_ops import multinomial as multinomial, random_crop as random_crop, random_gamma as random_gamma, random_normal as random_normal, random_poisson as random_poisson, random_shuffle as random_shuffle, random_uniform as random_uniform, truncated_normal as truncated_normal
from tensorflow.python.ops.script_ops import numpy_function as numpy_function, py_func as py_func
from tensorflow.python.ops.session_ops import delete_session_tensor as delete_session_tensor, get_session_handle as get_session_handle, get_session_tensor as get_session_tensor
from tensorflow.python.ops.sort_ops import argsort as argsort, sort as sort
from tensorflow.python.ops.sparse_ops import deserialize_many_sparse as deserialize_many_sparse, serialize_many_sparse as serialize_many_sparse, serialize_sparse as serialize_sparse, sparse_add as sparse_add, sparse_concat as sparse_concat, sparse_fill_empty_rows as sparse_fill_empty_rows, sparse_maximum as sparse_maximum, sparse_merge as sparse_merge, sparse_minimum as sparse_minimum, sparse_reduce_max as sparse_reduce_max, sparse_reduce_max_sparse as sparse_reduce_max_sparse, sparse_reduce_sum as sparse_reduce_sum, sparse_reduce_sum_sparse as sparse_reduce_sum_sparse, sparse_reorder as sparse_reorder, sparse_reset_shape as sparse_reset_shape, sparse_reshape as sparse_reshape, sparse_retain as sparse_retain, sparse_slice as sparse_slice, sparse_softmax as sparse_softmax, sparse_split as sparse_split, sparse_tensor_dense_matmul as sparse_tensor_dense_matmul, sparse_tensor_to_dense as sparse_tensor_to_dense, sparse_to_dense as sparse_to_dense, sparse_to_indicator as sparse_to_indicator, sparse_transpose as sparse_transpose
from tensorflow.python.ops.special_math_ops import einsum as einsum, lbeta as lbeta
from tensorflow.python.ops.state_ops import assign as assign, assign_add as assign_add, assign_sub as assign_sub, batch_scatter_update as batch_scatter_update, count_up_to as count_up_to, scatter_add as scatter_add, scatter_div as scatter_div, scatter_max as scatter_max, scatter_min as scatter_min, scatter_mul as scatter_mul, scatter_nd_add as scatter_nd_add, scatter_nd_sub as scatter_nd_sub, scatter_nd_update as scatter_nd_update, scatter_sub as scatter_sub, scatter_update as scatter_update
from tensorflow.python.ops.string_ops import reduce_join as reduce_join, regex_replace as regex_replace, string_join as string_join
from tensorflow.python.ops.template import make_template as make_template
from tensorflow.python.ops.tensor_array_ops import TensorArray as TensorArray, TensorArraySpec as TensorArraySpec
from tensorflow.python.ops.unconnected_gradients import UnconnectedGradients as UnconnectedGradients
from tensorflow.python.ops.variable_scope import AUTO_REUSE as AUTO_REUSE, VariableScope as VariableScope, disable_resource_variables as disable_resource_variables, enable_resource_variables as enable_resource_variables, get_local_variable as get_local_variable, get_variable as get_variable, get_variable_scope as get_variable_scope, no_regularizer as no_regularizer, resource_variables_enabled as resource_variables_enabled, variable_op_scope as variable_op_scope, variable_scope as variable_scope
from tensorflow.python.ops.variables import VariableAggregation as VariableAggregation, VariableSynchronization as VariableSynchronization, all_variables as all_variables, assert_variables_initialized as assert_variables_initialized, global_variables as global_variables, global_variables_initializer as global_variables_initializer, initialize_all_variables as initialize_all_variables, initialize_local_variables as initialize_local_variables, initialize_variables as initialize_variables, is_variable_initialized as is_variable_initialized, local_variables as local_variables, local_variables_initializer as local_variables_initializer, model_variables as model_variables, moving_average_variables as moving_average_variables, report_uninitialized_variables as report_uninitialized_variables, trainable_variables as trainable_variables, variables_initializer as variables_initializer
from tensorflow.python.platform import flags as flags
from tensorflow.python.platform.tf_logging import get_logger as get_logger
from typing import Any

estimator: Any

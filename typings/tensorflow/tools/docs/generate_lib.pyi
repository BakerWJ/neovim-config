from tensorflow.python.util import tf_inspect as tf_inspect
from tensorflow.tools.common import public_api as public_api, traverse as traverse
from tensorflow.tools.docs import doc_controls as doc_controls, doc_generator_visitor as doc_generator_visitor, parser as parser, pretty_docs as pretty_docs, py_guide_parser as py_guide_parser
from typing import Any

def write_docs(output_dir: Any, parser_config: Any, yaml_toc: Any, root_title: str = ..., search_hints: bool = ..., site_api_path: str = ...): ...
def add_dict_to_dict(add_from: Any, add_to: Any) -> None: ...

class DocControlsAwareCrawler(public_api.PublicAPIVisitor): ...

def extract(py_modules: Any, private_map: Any, do_not_descend_map: Any, visitor_cls: Any = ...): ...

class _GetMarkdownTitle(py_guide_parser.PyGuideParser):
    title: Any = ...
    def __init__(self) -> None: ...
    def process_title(self, _: Any, title: Any) -> None: ...

class _DocInfo:
    url: Any = ...
    title: Any = ...
    def __init__(self, url: Any, title: Any) -> None: ...

def build_doc_index(src_dir: Any): ...

class _GuideRef:
    url: Any = ...
    link_text: Any = ...
    def __init__(self, base_name: Any, title: Any, section_title: Any, section_tag: Any) -> None: ...
    def make_md_link(self, url_prefix: Any): ...

class _GenerateGuideIndex(py_guide_parser.PyGuideParser):
    index: Any = ...
    def __init__(self) -> None: ...
    full_path: Any = ...
    base_name: Any = ...
    title: Any = ...
    section_title: Any = ...
    section_tag: Any = ...
    def process(self, full_path: Any, base_name: Any) -> None: ...
    def process_title(self, _: Any, title: Any) -> None: ...
    def process_section(self, _: Any, section_title: Any, tag: Any) -> None: ...
    def process_line(self, _: Any, line: Any) -> None: ...

class _UpdateTags(py_guide_parser.PyGuideParser):
    def process_section(self, line_number: Any, section_title: Any, tag: Any) -> None: ...

def update_id_tags_inplace(src_dir: Any) -> None: ...

EXCLUDED: Any

def replace_refs(src_dir: Any, output_dir: Any, reference_resolver: Any, file_pattern: str = ..., api_docs_relpath: str = ...) -> None: ...

class DocGenerator:
    argument_parser: Any = ...
    yaml_toc: bool = ...
    def __init__(self) -> None: ...
    def add_output_dir_argument(self) -> None: ...
    def add_src_dir_argument(self) -> None: ...
    def add_base_dir_argument(self, default_base_dir: Any) -> None: ...
    def parse_known_args(self): ...
    def add_to_private_map(self, d: Any) -> None: ...
    def add_to_do_not_descend_map(self, d: Any) -> None: ...
    def set_private_map(self, d: Any) -> None: ...
    def set_do_not_descend_map(self, d: Any) -> None: ...
    def set_py_modules(self, py_modules: Any) -> None: ...
    def py_module_names(self): ...
    def make_reference_resolver(self, visitor: Any, doc_index: Any): ...
    def make_parser_config(self, visitor: Any, reference_resolver: Any, guide_index: Any, base_dir: Any): ...
    def run_extraction(self): ...
    def build(self, flags: Any): ...
